openapi: '3.1.0'
info:
  title: OpenMind Core API
  version: '1.0'
servers:
  - url: https://api.openmind.org/api/core
    description: OpenMind Core API
paths:
  /{provider}/chat/completions:
    post:
      summary: Get completions for a chat message
      description: Get completions for a chat message
      parameters:
        - name: provider
          in: path
          required: true
          description: The provider of the LLM (openai, deepseek, gemini)
          schema:
            type: string
            enum:
              - openai
              - deepseek
              - gemini
              - xai
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                  enum: ["gpt-4o", "gpt-4o-mini", "deepseek-chat", "gemini-2.0-flash-exp", "grok-3-mini-beta"]
                  description: The model to use for completion.
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                        enum: [system, user, assistant]
                        description: The role of the message sender.
                      content:
                        type: string
                        description: The text content of the message.
                  minItems: 1  # Ensures at least one message is sent
              required:
                - model
                - messages
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  choices:
                    type: array
                    description: A list of generated response choices.
                    items:
                      type: object
                      properties:
                        finish_reason:
                          type: string
                          description: The reason why the response generation stopped.
                          example: "stop"
                        index:
                          type: integer
                          description: The index of the response in the choices array.
                          example: 0
                        logprobs:
                          type: object
                          nullable: true
                          description: Log probabilities of tokens, if enabled.
                          example: null
                        message:
                          type: object
                          description: The generated message content.
                          properties:
                            annotations:
                              type: array
                              description: Additional annotations for the message.
                              items:
                                type: object
                              example: []
                            content:
                              type: string
                              description: The response text generated by the model.
                              example: "Hello! How can I assist you today?"
                            refusal:
                              type: string
                              nullable: true
                              description: Reason for refusal if the response was blocked.
                              example: null
                            role:
                              type: string
                              enum: [assistant]
                              description: The role of the message sender.
                              example: "assistant"
                  created:
                    type: integer
                    description: The Unix timestamp of response creation.
                    example: 1742147458
                  id:
                    type: string
                    description: The unique identifier of the completion request.
                    example: "chatcmpl"
                  model:
                    type: string
                    description: The model used for completion.
                    example: "gpt-4o-2024-08-06"
                  object:
                    type: string
                    description: The object type of the response.
                    example: "chat.completion"
                  service_tier:
                    type: string
                    description: The service tier used for the request.
                    example: "default"
                  system_fingerprint:
                    type: string
                    description: A fingerprint identifier for system consistency.
                    example: "fingerprint"
                  usage:
                    type: object
                    description: Token usage details.
                    properties:
                      completion_tokens:
                        type: integer
                        description: Number of tokens generated in the response.
                        example: 10
                      completion_tokens_details:
                        type: object
                        description: Breakdown of completion tokens.
                        properties:
                          accepted_prediction_tokens:
                            type: integer
                            description: Tokens accepted by the model.
                            example: 0
                          audio_tokens:
                            type: integer
                            description: Tokens used for audio processing.
                            example: 0
                          reasoning_tokens:
                            type: integer
                            description: Tokens used for reasoning tasks.
                            example: 0
                          rejected_prediction_tokens:
                            type: integer
                            description: Tokens rejected by the model.
                            example: 0
                      prompt_tokens:
                        type: integer
                        description: Number of tokens in the input prompt.
                        example: 8
                      prompt_tokens_details:
                        type: object
                        description: Breakdown of prompt tokens.
                        properties:
                          audio_tokens:
                            type: integer
                            description: Tokens used for audio input.
                            example: 0
                          cached_tokens:
                            type: integer
                            description: Cached tokens reused from previous requests.
                            example: 0
                      total_tokens:
                        type: integer
                        description: Total number of tokens used in the request.
                        example: 18
                required:
                  - choices
                  - created
                  - id
                  - model
                  - object
                  - usage
        '500':
          description: Internal server error.
        '503':
          description: Failed to forward the request to the provider.
      security:
        - apiKeyAuth: []
        - bearerAuth: []

  /agent:
      post:
        summary: Run a multi-agent task with the specified agent
        description: Multi-agent endpoint that runs the multi-agent with the given message
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  model:
                    type: string
                    description: The model to use for the agent run
                    default: "gpt-4.1-nano"
                    enum: ["gpt-4o", "gpt-4o-mini", "gpt-4.1", "gpt-4.1-mini", "gpt-4.1-nano"]
                  message:
                    type: string
                    description: The message to be processed by the agent
                    example: "Analyze the market trends for renewable energy"
                  response_model:
                    type: object
                    description: Optional JSON schema for structuring the agent's response
                required:
                  - model
                  - message
        responses:
          '200':
            description: Successful agent run response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    content:
                      type: object
                      description: The response content from the agent, structure depends on the response_model if provided
                    usage:
                      type: object
                      description: Metrics about the agent run and resources used
                      properties:
                        prompt_tokens:
                          type: integer
                          description: Number of tokens in the input prompt
                        completion_tokens:
                          type: integer
                          description: Number of tokens in the generated response
                        total_tokens:
                          type: integer
                          description: Total number of tokens used
                    model:
                      type: string
                      description: The model used for the agent run
                  required:
                    - content
                    - usage
                    - model
          '400':
            description: Bad request - missing required information
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Error message explaining what information is missing
                      example: "No message provided"
          '403':
            description: Rate limit exceeded
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Rate limit error message
                      example: "Rate limit exceeded. Try again in 60 seconds."
          '500':
            description: Internal server error
        security:
          - apiKeyAuth: []
          - bearerAuth: []

  /elevenlabs/tts:
    post:
      summary: Get a text-to-speech audio data (Eleven Labs model)
      description: Get a text-to-speech audio data (Eleven Labs model)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to convert to speech.
                voice_id:
                  type: string
                  description: The voice ID to use for the speech.
                model_id:
                  type: string
                  description: The model ID to use for the speech.
                output_format:
                  type: string
                  description: The output format of the audio data.
              required:
                - text
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    format: byte
                    description: The base64 encoded audio data.
        '400':
          description: Invalid JSON input.
        '500':
          description: Internal server error.
        '503':
          description: Failed to forward the request to the provider.
      security:
        - apiKeyAuth: []
        - bearerAuth: []

  /riva/tts:
    post:
      summary: Get a text-to-speech audio data (Riva model)
      description: Get a text-to-speech audio data (Riva model)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to convert to speech.
              required:
                - text
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    format: byte
                    description: The base64 encoded audio data.
        '400':
          description: Invalid JSON input.
        '500':
          description: Internal server error.
        '503':
          description: Failed to forward the request to the provider.
      security:
        - apiKeyAuth: []
        - bearerAuth: []

  /api_keys:
    get:
      summary: List API keys
      description: Retrieve a list of API keys associated with the user.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier of the API key.
                    user_id:
                      type: string
                      description: The ID of the user associated with the API key.
                    name:
                      type: string
                      description: The name of the API key.
                    hashed_key:
                      type: string
                      description: The hashed value of the API key.
                    prefix:
                      type: string
                      description: The prefix of the API key.
                    created_at:
                      type: string
                      format: date-time
                      description: The timestamp when the API key was created.
                    revoked_at:
                      type: string
                      format: date-time
                      description: The timestamp when the API key was revoked, if applicable.
                    deleted:
                      type: boolean
                      description: Indicates if the API key has been deleted.
        '400':
          description: Bad request - Invalid parameters or missing authentication.
        '401':
          description: Unauthorized - Invalid or missing authentication token.
      security:
        - bearerAuth: []

  /api_keys/create:
    post:
      summary: Create a new API key
      description: Create a new API key for the user.
      responses:
        '200':
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the API key was created successfully.
                    example: "API key created successfully."
                  api_key:
                    type: string
                    description: The newly created API key.
                  api_key_info:
                    type: object
                    properties:
                      id:
                        type: string
                        description: The unique identifier of the API key.
                      user_id:
                        type: string
                        description: The ID of the user associated with the API key.
                      name:
                        type: string
                        description: The name of the API key.
                      hashed_key:
                        type: string
                        description: The hashed value of the API key.
                      prefix:
                        type: string
                        description: The prefix of the API key.
                      created_at:
                        type: string
                        format: date-time
                        description: The timestamp when the API key was created.
                      revoked_at:
                        type: string
                        format: date-time
                        description: The timestamp when the API key was revoked, if applicable.
                      deleted:
                        type: boolean
                        description: Indicates if the API key has been deleted.
        '400':
          description: Bad request - Invalid parameters or missing authentication.
        '401':
          description: Unauthorized - Invalid or missing authentication token.
      security:
        - bearerAuth: []

  /api_keys/delete:
    post:
      summary: Delete an API key
      description: Delete an existing API key for the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the API key to delete.
              required:
                - id
      responses:
        '200':
          description: API key deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A message indicating the API key was deleted successfully.
                    example: "API key deleted successfully."
        '400':
          description: Bad request - Invalid parameters or missing authentication.
        '401':
          description: Unauthorized - Invalid or missing authentication token.
      security:
        - bearerAuth: []

  /account/balance:
    get:
      summary: Get account balance
      description: Retrieve the current balance of the user's account.
      responses:
        '200':
          description: Successful response with account balance
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    format: float
                    description: The current balance of the user's account.
                    example: 100.50
        '400':
          description: Bad request - Invalid parameters or missing authentication.
        '401':
          description: Unauthorized - Invalid or missing authentication token.
      security:
        - bearerAuth: []

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
